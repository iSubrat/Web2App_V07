name: OneProcess
on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '*/10 * * * *'  # Run every 5 minutes

jobs:
  update_files:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

      
    # - name: Run script to update Files
    #   run: python step01.py
    #   env:
    #       SMTP_HOST: ${{ secrets.SMTP_HOST }}
    #       DB_HOST: ${{ secrets.DB_HOST }}
    #       DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #       DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #       DB_NAME: ${{ secrets.DB_NAME }}

    # - name: Commit changes
    #   run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "GitHub Action"
    #     git commit -a -m "Update Android Manifest" || true

    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GIT_TOKEN }}

    # - name: Run script to check status
    #   run: python step02.py
    #   env:
    #     SMTP_HOST: ${{ secrets.SMTP_HOST }}
    #     DB_HOST: ${{ secrets.DB_HOST }}
    #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #     DB_NAME: ${{ secrets.DB_NAME }}

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2

    - name: Cache Flutter dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.pub-cache
          **/flutter/.pub-cache
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-flutter-


    - name: Build APK
      run: flutter build apk --release

    # - name: Upload APK and App Bundle
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: app-artifacts
    #     path: build/app/outputs/flutter-apk/

    # - name: FTP Transfer
    #   uses: joutvhu/ftp-transfer@v1
    #   with:
    #     host: ${{ secrets.FTP_SERVER }}
    #     port: 21
    #     username: ${{ secrets.FTP_USERNAME }}
    #     password: ${{ secrets.FTP_PASSWORD }}
    #     commands: |
    #       put ./build/app/outputs/flutter-apk/ ./
    #       delete app-release.apk.sha1
          
    # - name: Run script to rename file
    #   run: python step03.py
    #   env:
    #     SMTP_HOST: ${{ secrets.SMTP_HOST }}
    #     DB_HOST: ${{ secrets.DB_HOST }}
    #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #     DB_NAME: ${{ secrets.DB_NAME }}
    #     FTP_SERVER: ${{ secrets.FTP_SERVER }}
    #     FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
    #     FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}

    # - name: Run script to Send Email
    #   run: python step04.py
    #   env:
    #       SMTP_HOST: ${{ secrets.SMTP_HOST }}
    #       DB_HOST: ${{ secrets.DB_HOST }}
    #       DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #       DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #       DB_NAME: ${{ secrets.DB_NAME }}
    #       EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
    #       EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
    #       EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
    #       EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
    #       FTP_SERVER: ${{ secrets.FTP_SERVER }}
    #       FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
    #       FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
